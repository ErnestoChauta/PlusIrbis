#
# Network client library
#

sources = [ 'src/Address.cpp',
    'src/AlphabetTable.cpp',
    'src/Author.cpp',
    'src/BookInfo.cpp',
    'src/ByteNavigator.cpp',
    'src/ChunkedBuffer.cpp',
    'src/ClientQuery.cpp',
    'src/ClientSocket.cpp',
    'src/Codes.cpp',
    'src/Connection.cpp',
    'src/ConnectionAdmin.cpp',
    'src/ConnectionBase.cpp',
    'src/ConnectionContext.cpp',
    'src/ConnectionFactory.cpp',
    'src/ConnectionFull.cpp',
    'src/ConnectionLite.cpp',
    'src/ConnectionPhantom.cpp',
    'src/ConnectionSearch.cpp',
    'src/DatabaseInfo.cpp',
    'src/Date.cpp',
    'src/DirectAccess.cpp',
    'src/Directory.cpp',
    'src/Ean.cpp',
    'src/EmbeddedField.cpp',
    'src/Encoding.cp1251.cpp',
    'src/Encoding.cp866.cpp',
    'src/Encoding.cpp',
    'src/Encoding.koi8r.cpp',
    'src/Encoding.utf8.cpp',
    'src/Exemplar.cpp',
    'src/File.cpp',
    'src/FileSpecification.cpp',
    'src/FoundLine.cpp',
    'src/Gbl.cpp',
    'src/IlfFile.cpp',
    'src/IniFile.cpp',
    'src/IO.cpp',
    'src/irbis.cpp',
    'src/Isbn.cpp',
    'src/Iso2709.cpp',
    'src/Lite.cpp',
    'src/Log.cpp',
    'src/MarcRecord.cpp',
    'src/MemoryPool.cpp',
    'src/Menu.cpp',
    'src/Mst.cpp',
    'src/NewEncoding.cpp',
    'src/NumberText.cpp',
    'src/OptFile.cpp',
    'src/ParFile.cpp',
    'src/Pft.cpp',
    'src/Phantom.cpp',
    'src/ProcessInfo.cpp',
    'src/RawRecord.cpp',
    'src/Reader.cpp',
    'src/RecordField.cpp',
    'src/RecordSerializer.cpp',
    'src/RecordStatus.cpp',
    'src/Registration.cpp',
    'src/Search.cpp',
    'src/ServerResponse.cpp',
    'src/ServerStat.cpp',
    'src/Span.cpp',
    'src/SubField.cpp',
    'src/Tcp4Socket.cpp',
    'src/TermInfo.cpp',
    'src/TermPosting.cpp',
    'src/Text.cpp',
    'src/TextNavigator.cpp',
    'src/Title.cpp',
    'src/TreeFile.cpp',
    'src/TreeNode.cpp',
    'src/Upc.cpp',
    'src/UserInfo.cpp',
    'src/Version.cpp',
    'src/Visit.cpp',
    'src/Xrf.cpp'
    ]

libirbis = static_library('irbis',
        sources,
        include_directories: commonInclude
    )

libirbis_dep = declare_dependency(link_with: libirbis)
